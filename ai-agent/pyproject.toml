[project]
name = "Smart Query"
version = "0.0.1"
description = "AI agent designed for intelligent analysis of both unstructured and structured data, providing contextual insights."
authors = [
    { name = "Ingrid Andrade", email = "ingridandrade@offgridmartech.com.br" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"

dependencies = [
    "langgraph>=0.2.6",
    "langchain-openai>=0.1.22",
    "langchain-anthropic>=0.1.23",
    "langchain>=0.2.14",
    "langchain-fireworks>=0.1.7",
    "python-dotenv>=1.0.1",
    "langchain-community>=0.2.17",
    "tavily-python>=0.4.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.22.0",
    "psycopg2-binary>=2.9.6",
    "pinecone>=2.0.0",
    "openai>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "mypy>=1.11.1",
    "ruff>=0.6.1"
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "langgraph.templates.react_agent",
    "react_agent"
]

[tool.setuptools.package-dir]
"langgraph.templates.react_agent" = "src/react_agent"
"react_agent" = "src/react_agent"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ exigir docstring p/ cada param
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]

[tool.ruff.lint.pydocstyle]
convention = "google"
